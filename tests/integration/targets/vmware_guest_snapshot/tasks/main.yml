- import_role:
    name: prepare_vmware_tests
  vars:
    setup_attach_host: true
    setup_datastore: true
    setup_virtualmachines: true
- name: 0001 - Delete non-existent snapshot
  vmware_guest_snapshot:
    validate_certs: false
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    datacenter: '{{ dc1 }}'
    name: '{{ virtual_machines[0].name }}'
    folder: '{{ virtual_machines[0].folder }}'
    state: absent
    snapshot_name: snap_a
- name: 0002 - Create snapshot
  vmware_guest_snapshot:
    validate_certs: false
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    datacenter: '{{ dc1 }}'
    name: '{{ virtual_machines[0].name }}'
    folder: '{{ virtual_machines[0].folder }}'
    state: present
    snapshot_name: snap_{{item}}
    description: snap named {{item}}
  with_items:
  - a
  - b
- when: vcsim is not defined
  block:
  - name: 0003 - Rename snapshot
    vmware_guest_snapshot:
      validate_certs: false
      hostname: '{{ vcenter_hostname }}'
      username: '{{ vcenter_username }}'
      password: '{{ vcenter_password }}'
      datacenter: '{{ dc1 }}'
      name: '{{ virtual_machines[0].name }}'
      folder: '{{ virtual_machines[0].folder }}'
      state: present
      snapshot_name: snap_a
      new_snapshot_name: snap_c
- name: 0004 - Re-create snapshot a
  vmware_guest_snapshot:
    validate_certs: false
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    datacenter: '{{ dc1 }}'
    name: '{{ virtual_machines[0].name }}'
    folder: '{{ virtual_machines[0].folder }}'
    state: present
    snapshot_name: snap_a
    description: snap named a
- name: 0005 - Change description of snap_c
  vmware_guest_snapshot:
    validate_certs: false
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    datacenter: '{{ dc1 }}'
    name: '{{ virtual_machines[0].name }}'
    folder: '{{ virtual_machines[0].folder }}'
    state: present
    snapshot_name: snap_c
    new_description: renamed to snap_c from snap_a
- when: vcsim is not defined
  block:
  - name: 0006 - Delete snap_b with child remove
    vmware_guest_snapshot:
      validate_certs: false
      hostname: '{{ vcenter_hostname }}'
      username: '{{ vcenter_username }}'
      password: '{{ vcenter_password }}'
      datacenter: '{{ dc1 }}'
      name: '{{ virtual_machines[0].name }}'
      folder: '{{ virtual_machines[0].folder }}'
      state: absent
      snapshot_name: snap_b
      remove_children: true
  - name: 0007 - Delete all snapshots
    vmware_guest_snapshot:
      validate_certs: false
      hostname: '{{ vcenter_hostname }}'
      username: '{{ vcenter_username }}'
      password: '{{ vcenter_password }}'
      datacenter: '{{ dc1 }}'
      name: '{{ virtual_machines[0].name }}'
      folder: '{{ virtual_machines[0].folder }}'
      state: remove_all
- name: 0008 - Re-create snapshot a
  vmware_guest_snapshot:
    validate_certs: false
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    datacenter: '{{ dc1 }}'
    name: '{{ virtual_machines[0].name }}'
    folder: '{{ virtual_machines[0].folder }}'
    state: present
    snapshot_name: snap_a
    description: snap named a
- when: vcsim is not defined
  block:
  - name: 0008 - Revert to snap_a
    vmware_guest_snapshot:
      validate_certs: false
      hostname: '{{ vcenter_hostname }}'
      username: '{{ vcenter_username }}'
      password: '{{ vcenter_password }}'
      datacenter: '{{ dc1 }}'
      name: '{{ virtual_machines[0].name }}'
      folder: '{{ virtual_machines[0].folder }}'
      state: revert
      snapshot_name: snap_a
- name: 0009 - create snapshot a
  vmware_guest_snapshot:
    validate_certs: false
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    datacenter: '{{ dc1 }}'
    name: '{{ virtual_machines[0].name }}'
    folder: '{{ virtual_machines[0].folder }}'
    state: present
    snapshot_name: snap_a
    description: snap named a
  register: snapshot_details
- debug: var=snapshot_details
- name: Check if snapshot details available or not
  assert:
    that:
    - snapshot_details['msg'] == 'Snapshot named [snap_a] already exists and is current.'
- name: 0011 - name and UUID is missing
  vmware_guest_snapshot:
    validate_certs: false
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    datacenter: '{{ dc1 }}'
    state: present
    snapshot_name: snap_a
    description: snap named a
  register: snapshot_failure_details
  ignore_errors: true
- name: Check if error is shown
  assert:
    that:
    - '''one of the following is required: name, uuid'' in snapshot_failure_details[''msg'']'
    - snapshot_failure_details.changed == false
