- import_role:
    name: prepare_vmware_tests
- name: Create test cluster
  vmware_cluster:
    validate_certs: false
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    datacenter_name: '{{ dc1 }}'
    cluster_name: test_cluster_ha
    state: present
- name: Enable HA
  vmware_cluster_ha:
    validate_certs: false
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    datacenter_name: '{{ dc1 }}'
    cluster_name: test_cluster_ha
    enable_ha: true
  register: cluster_ha_result_0001
- name: Ensure HA is enabled
  assert:
    that:
    - '{{ cluster_ha_result_0001.changed == true }}'
- name: Enable Slot based Admission Control
  vmware_cluster_ha:
    validate_certs: false
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    datacenter_name: '{{ dc1 }}'
    cluster_name: test_cluster_ha
    enable_ha: true
    slot_based_admission_control:
      failover_level: 1
  register: cluster_ha_result_0002
- name: Ensure Admission Cotrol is enabled
  assert:
    that:
    - '{{ cluster_ha_result_0002.changed == true }}'
- name: Enable Cluster resource Percentage based Admission Control
  vmware_cluster_ha:
    validate_certs: false
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    datacenter_name: '{{ dc1 }}'
    cluster_name: test_cluster_ha
    enable_ha: true
    reservation_based_admission_control:
      auto_compute_percentages: false
      failover_level: 1
      cpu_failover_resources_percent: 33
      memory_failover_resources_percent: 33
  register: cluster_ha_result_0003
- name: Ensure Admission Cotrol is enabled
  assert:
    that:
    - '{{ cluster_ha_result_0003.changed == true }}'
- name: Set Isolation Response to powerOff
  vmware_cluster_ha:
    validate_certs: false
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    datacenter_name: '{{ dc1 }}'
    cluster_name: test_cluster_ha
    enable_ha: true
    host_isolation_response: powerOff
  register: cluster_ha_result_0004
- name: Ensure Isolation Response is enabled
  assert:
    that:
    - '{{ cluster_ha_result_0004.changed == true }}'
- name: Set Isolation Response to shutdown
  vmware_cluster_ha:
    validate_certs: false
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    datacenter_name: '{{ dc1 }}'
    cluster_name: test_cluster_ha
    enable_ha: true
    host_isolation_response: shutdown
  register: cluster_ha_result_0005
- name: Ensure Isolation Response is enabled
  assert:
    that:
    - '{{ cluster_ha_result_0005.changed == true }}'
- name: Disable HA
  vmware_cluster_ha:
    validate_certs: false
    hostname: '{{ vcenter_hostname }}'
    username: '{{ vcenter_username }}'
    password: '{{ vcenter_password }}'
    datacenter_name: '{{ dc1 }}'
    cluster_name: test_cluster_ha
    enable_ha: false
  register: cluster_ha_result_0006
- name: Ensure HA is disabled
  assert:
    that:
    - '{{ cluster_ha_result_0006.changed == true }}'
- when: vcsim is not defined
  block:
  - name: Change advanced setting "number of heartbeat datastores" (check-mode)
    vmware_cluster_ha: &id001
      validate_certs: false
      hostname: '{{ vcenter_hostname }}'
      username: '{{ vcenter_username }}'
      password: '{{ vcenter_password }}'
      datacenter_name: '{{ dc1 }}'
      cluster_name: test_cluster_ha
      advanced_settings:
        das.heartbeatDsPerHost: '4'
    check_mode: true
    register: change_num_heartbeat_ds_check
  - assert:
      that:
      - change_num_heartbeat_ds_check.changed
  - name: Change advanced setting "number of heartbeat datastores"
    vmware_cluster_ha: *id001
    register: change_num_heartbeat_ds
  - assert:
      that:
      - change_num_heartbeat_ds.changed
  - name: Change advanced setting "number of heartbeat datastores" again
    vmware_cluster_ha: *id001
    register: change_num_heartbeat_ds_again
  - assert:
      that:
      - not change_num_heartbeat_ds_again.changed
  - name: Delete test cluster
    vmware_cluster:
      validate_certs: false
      hostname: '{{ vcenter_hostname }}'
      username: '{{ vcenter_username }}'
      password: '{{ vcenter_password }}'
      datacenter_name: '{{ dc1 }}'
      cluster_name: test_cluster_ha
      state: absent
